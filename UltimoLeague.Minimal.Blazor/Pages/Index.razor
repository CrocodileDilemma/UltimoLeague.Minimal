@page "/"

@inject IBaseService _service
@inject ISnackbar _snackbar

<PageTitle>Ultimo League</PageTitle>
<MudText Typo="Typo.h4" GutterBottom="true">Welcome to Ultimo League</MudText>
<MudText Class="mb-8" GutterBottom="true">Please select a sport below to begin!</MudText>
<MudGrid>
@foreach (var sport in sports)
{
    <MudItem xs="4">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8" onclick="@(() => HandleSportClick(sport.Id))">@sport.SportName</MudPaper>
    </MudItem>
}
</MudGrid>



@code{
    private IEnumerable<SportMinimalDto> sports = Enumerable.Empty<SportMinimalDto>();

    protected override async Task OnInitializedAsync()
    {
        ErrorOr<IEnumerable<SportMinimalDto>> result = await _service.Get<IEnumerable<SportMinimalDto>>("sports");
        if (result.IsError)
        {
            _snackbar.Add(result.FirstError.Description, Severity.Error);
        }
        else
        {
            sports = result.Value;
        }
    }

    private async Task HandleSportClick(string sportId)
    {
        ErrorOr<IEnumerable<LeagueDto>> result = await _service.Get<IEnumerable<LeagueDto>>($"leagues/getBySportId/{sportId}");
        if (result.IsError)
        {
            _snackbar.Add(result.FirstError.Description, Severity.Error);
        }
        else
        {
            foreach (var league in result.Value)
            {
                _snackbar.Add($"{ league.Code } - { league.Name }", Severity.Normal);
            }
        }
    }
}